#!/usr/bin/env bash

DOCKER_REGISRY_USER=alectolytic

function generate() {
    SOURCES=${SOURCES-/sources}
    OUTPUT=${OUTPUT-/output}
    WORKSPACE=${WORKSPACE-/workspace}
    RPM_BUILD_DIR=${RPM_BUILD_DIR-/rpmbuild}

    DISTRO=${1-fedora}
    RELEASE=${2-latest}
    YUM="yum"
    [[ ${DISTRO} =~ .*fedora ]] && YUM="dnf"

    ROOT=$(pwd)/${DISTRO}/${RELEASE}/
    ASSETS=${ROOT}/assets
    DOCKERFILE=${ROOT}/Dockerfile
    rm -rf ${ROOT} && mkdir -p ${ROOT}

    # prepare files
    cp -R ./assets ${ROOT}/.
    # cp LICENCE README.md

    # header
    cat > ${DOCKERFILE} << EOF
FROM ${DISTRO}:${RELEASE}
MAINTAINER "Arun Neelicattu" <arun.neelicattu@gmail.com>

ENV WORKSPACE ${WORKSPACE}
ENV SOURCES ${SOURCES}
ENV OUTPUT ${OUTPUT}

RUN ${YUM} -y install rpm-build rpmdevtools yum-utils && ${YUM} -y clean all
ENV RPM_BUILD_DIR ${RPM_BUILD_DIR}
EOF

    case "${DISTRO}" in
        centos|cloudrouter*centos)
            cat >> ${DOCKERFILE} << EOF
RUN ${YUM} -y install epel-release

EOF
            ;;
    esac

    cat >> ${DOCKERFILE} << EOF
RUN ln -sf \${RPM_BUILD_DIR} /root/rpmbuild

RUN mkdir -p \${SOURCES} \\
    \${WORKSPACE} \\
    \${OUTPUT} \\
    \${RPM_BUILD_DIR}/{BUILD,RPMS,SOURCES,SPECS,SRPMS}

VOLUME ["\${SOURCES}", "\${OUTPUT}", "\${WORKSPACE}", "\${RPM_BUILD_DIR}"]

ADD ./assets/build /usr/bin/build

CMD ["build"]
EOF
}

function map-all() {
    while IFS=' ' read -r -a input; do 
        $1 ${input[0]} ${input[1]}
    done < ./defaults
}

function docker-image-name() {
    DISTRO=${1}
    VERSION=${2}
    echo -n "${DOCKER_REGISRY_USER}/rpmbuilder:${DISTRO/\//-}-${VERSION}"
   
}

function build() {
    DISTRO=${1}
    VERSION=${2}
    cd ${DISTRO}/${VERSION} \
        && docker build -t $(docker-image-name ${DISTRO} ${VERSION}) .
    cd -
}

function push() {
    DISTRO=${1}
    VERSION=${2}
    docker push $(docker-image-name ${DISTRO} ${VERSION})
}

case "$1" in
    generate|build|push)
        if [ "$2" == "all" ]; then
            map-all $1
        else
            $1 $2 $3 
        fi ;;
esac
